name: SQS proxy rabbitmq

on:
  push:
    branches:
      - dev

env:
  AWS_REGION: us-east-1

jobs:
  infra-up:
    name: Infra up to aws
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: "./aws-infra"
    timeout-minutes: 10
    outputs:
      sqs-arn: ${{ steps.sqs-arn.outputs.SQS_ARN}}
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.5

      - name: Create terraform.tfvars file
        run: |
          cat >terraform.tfvars<<EOL
          preFixName="matheusrosmano-sqs-proxy-rabbitmq"
          EOL

      - name: Create the file main.tf
        run: |
          mv main.tf.modelo main.tf
          sed -i "s|<BUCKET_STATE_NAME>|${{ secrets.BUCKET_STATE_NAME }}|g" main.tf
          sed -i "s|<BUCKET_STATE_REGION>|${{ env.AWS_REGION }}|g" main.tf
          sed -i "s|<BUCKET_RESOURCES_REGION>|${{ env.AWS_REGION }}|g" main.tf

      - name: Terraform init
        run: terraform init

      - name: Terraform validate
        run: terraform validate

      - name: Terraform apply
        run: terraform apply -auto-approve

      - name: Exporta arn do sqs
        id: sqs-arn
        run: |
          SQS=$(terraform output sqs-arn)
          echo "SQS_ARN=${SQS:1:-1}" >> $GITHUB_OUTPUT

  lambda-up:
    name: Lambda up
    needs: [ infra-up ]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ajusta o arquivo de template
        run: |
          SQS_ARN=${{ needs.infra-up.outputs.sqs-arn }}
          echo $SQS_ARN