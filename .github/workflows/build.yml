name: SQS proxy rabbitmq

on:
  push:
    branches:
      - dev

env:
  AWS_REGION: us-east-1

jobs:
  infra-up:
    name: Infra up to aws
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./aws-infra
    outputs:
      SQS_ARN: ${{ steps.sqs-arn.outputs.SQS_ARN }}
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "v1.3.5"
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Create terraform.tfvars file
        run: |
          cat >terraform.tfvars<<EOL
          preFixName="matheusrosmano-sqs-proxy-rabbitmq"
          EOL

      - name: Create the file main.tf
        run: |
          mv main.tf.modelo main.tf
          sed -i "s|<ORGANIZATION_NAME>|rosmano-tech|g" main.tf
          sed -i "s|<WORKSPACE_NAME>|sqs-proxy-rabbitmq|g" main.tf
          sed -i "s|<AWS_RESOURCES_REGION>|${{ env.AWS_REGION }}|g" main.tf
          sed -i "s|<AWS_ACCESS_KEY_ID>|${{ secrets.AWS_ACCESS_KEY_ID }}|g" main.tf
          sed -i "s|<AWS_SECRET_ACCESS_KEY>|${{ secrets.AWS_SECRET_ACCESS_KEY }}|g" main.tf

      - name: Terraform init
        run: terraform init

      - name: Terraform validate
        run: terraform validate

      - name: Terraform apply
        run: terraform apply -auto-approve

      - name: Debug sqs
        shell: bash
        run: |
          set -x
          TESTE=$(terraform output -raw sqs-arn)
          echo $TESTE

      - name: Get sqs arn
        shell: bash
        id: sqs-arn
        run: |
          set -x
          TESTE=$(terraform output -raw sqs-arn)
          echo "SQS_ARN=$TESTE" >> $GITHUB_OUTPUT

  lambda-up:
    name: Lambda up
    runs-on: ubuntu-latest
    needs: infra-up
    steps:
      - uses: actions/checkout@v3

      # - name: Setup Go environment
      #   uses: actions/setup-go@v3.3.1
      #   with:
      #     go-version: "1.19"
      #     cache: true

      # - name: Go mod tidy
      #   working-directory: ./src
      #   run: go mod tidy

      - name: Replace sqs into template
        run: |
          sed -i "s|<SQS_ARN>|${{ needs.infra-up.outputs.SQS_ARN }}|g" template.yml

      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: template.yml

      # - name: Setup AWS SAM CLI
      #   uses: aws-actions/setup-sam@v2

      # - name: SAM BUILD
      #   run: sam build

      # - name: SAM validate
      #   run: sam validate

      # - name: Sam deploy
      #   working-directory: ./aws-infra
      #   run: |
      #     LAMBDA_STATE_BUCKET_NAME=$(terraform output bucket-lambda-name)
      #     echo $LAMBDA_STATE_BUCKET_NAME
      #     cd ..
      #     sam deploy --stack-name sqs-proxy-rabbitmq \
      #     --s3-bucket $LAMBDA_STATE_BUCKET_NAME \
      #     --parameter-overrides \
      #         environment=development \
      #     --capabilities CAPABILITY_IAM \
      #     --no-confirm-changeset
